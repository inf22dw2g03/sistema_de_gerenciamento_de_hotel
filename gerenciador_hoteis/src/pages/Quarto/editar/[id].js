import axios from 'axios';
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';

export default function Editar() {
    const [data, setData] = useState({
        id: '',
        numero_quarto: '',
        tipo_quart: '',
        numero_cama: '',
        preco_noite: '',
        disponibilidade: ''
    });

    const [message, setMessage] = useState("");

    const router = useRouter();
    const [id] = useState(router.query.id);

    const getQuarto = useCallback(async () => {
        if (id === undefined) {
          setMessage("Erro: Quarto não encontrado!");
          return;
        }
      
        const config = {
          headers: {
            Authorization: `Bearer ${localStorage.getItem('token')}`, 
          },
        };
        try {
          const response = await axios.get("http://localhost:3000/quarto/" + id, config);
          console.log(response.data.quarto);
          setData(response.data.quarto);
        } catch (err) {
          if (err.response) {
            setMessage(err.response.data.mensagen);
          } else {
            setMessage("Erro: Tente mais tarde!");
          }
        }
      }, [id]);
      

    useEffect(() => {
        getQuarto();
    }, [id, getQuarto]);

    const valueInput = (e) => setData({...data, [e.target.name]: e.target.value});

    const editQuarto = async (e) => {
        e.preventDefault();

        const headers = {
            'headers': {
                'Content-Type': 'application/json'
            }
        };

        await axios.put('http://localhost:3000/quarto/', data, headers)
            .then((response) => {
                setMessage(response.data.mensagem);
            }).catch((err) => {
                if (err.response) {
                    setMessage(err.response.data.mensagem);
                } else {
                    setMessage("Erro: Tente novamente mais tarde ou entre em contato com Etson Silva!");
                }
            });
    }

    return (
        <>
            <Head>
                <title>Sistema de gestão de hotéis</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                <Link href={"/"}><button type="button">Listar</button> </Link>

                <h2>Editar o Quarto</h2>

                {message ? <p>{message}</p> : ""}

                <form onSubmit={editQuarto}>
                    <input type='hidden' name='id' value={data.id} />

                    <label>Numero do quarto:</label>
                    <input type='text' name='numero_quarto' placeholder='Digite o numero do quarto' onChange={valueInput} value={data.numero_quarto}/> <br /><br />
                    <label>Endereco:</label>
                    <input type='text' name='tipo_quart' placeholder='Digite o tipo de quarto' onChange={valueInput} value={data.tipo_quart}/> <br /><br />
                    <label>Numero de cama:</label>
                    <input type='text' name='numero_cama' placeholder='Digite numeros de cama' onChange={valueInput} value={data.numero_cama}/> <br /><br />
                    <label>Preço por noite:</label>
                    <input type='text' name='preco_noite' placeholder='Digite o preço' onChange={valueInput} value={data.preco_noite}/> <br /><br />
                    <label>Disponibilidade:</label>
                    <input type='text' name='disponibilidade' placeholder='Digite a disponibilidade' onChange={valueInput} value={data.disponibilidade}/> <br /><br />

                    <button type='submit'>Guardar Alterações</button>
                </form>
            </main>
        </>
    )
}
