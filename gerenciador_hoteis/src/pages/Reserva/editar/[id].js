import axios from 'axios';
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';

export default function Editar() {

    const [data, setData] = useState({
        id: '',
        data_check_in: '',
        data_check_out: '',
        numero_pessoas: '',
        numero_quarto: '',
        preco: '',
        status_reserva: ''
    });

    const [message, setMessage] = useState("");

    const router = useRouter();
    const [id] = useState(router.query.id);

    const getReserva = useCallback(async () => {
        if (id === undefined) {
          setMessage("Erro: Reserva não encontrada!");
          return;
        }
      
        const config = {
          headers: {
            Authorization: `Bearer ${localStorage.getItem('token')}`, 
          },
        };
        try {
          const response = await axios.get("http://localhost:3000/reserva/" + id, config);
          console.log(response.data.reserva);
          setData(response.data.reserva);
        } catch (err) {
          if (err.response) {
            setMessage(err.response.data.mensagen);
          } else {
            setMessage("Erro: Tente mais tarde!");
          }
        }
      }, [id]);
      

    useEffect(() => {
        getReserva();
      }, [id, getReserva]);

      const valueInput = (e) => setData({...data, [e.target.data_check_in]: e.target.value});

      const editReserva = async (e) => {
        e.preventDefault();

        const headers = {
            'headers': {
                'Content-Type': 'application/json'
            }
        };
        await axios.put('http://localhost:3000/reserva/', data, headers)
        .then((response) => {
            setMessage(response.data.mensagem);
        }).catch((err) => {
            if (err.response) {
                setMessage(err.response.data.mensagem);
            }else {
                setMessage("Erro: Tente novamente mais tarde ou entre contato com <a href='mailto:a041711@umaia.pt'> Etson Silva ou !");
            }
        });
      }

  return (
    <>
      <Head>
        <title>Sistema de gestão de hoteis</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main >
        <Link href={"/"}><button type="button">Listar</button> </Link>

        <h2>Editar o Reserva</h2>

        {message ? <p>{message}</p> : ""}
        
        <form onSubmit={editReserva}>
            <input type='hidden' name='id' value={data.id} />

            <label>Data Check_In:</label>
            <input type='text' name='data_check_in' placeholder='Digite a data de entrada' onChange={valueInput} value={data.data_check_in}/> <br /><br />
            <label>Data Check_Out:</label>
            <input type='text' name='data_check_out' placeholder='Digite a data de saida' onChange={valueInput} value={data.data_check_out}/> <br /><br />
            <label>Numero Pessoas:</label>
            <input type='text' name='numero_pessoas' placeholder='Digite o numero de pessoas' onChange={valueInput} value={data.numero_pessoas}/> <br /><br />
            <label>Numero Quarto:</label>
            <input type='text' name='numero_quarto' placeholder='Digite o numero de quarto' onChange={valueInput} value={data.numero_quarto}/> <br /><br />
            <label>Preço:</label>
            <input type='text' name='preco' placeholder='Digite o preço' onChange={valueInput} value={data.preco}/> <br /><br />
            <label>Status Reserva:</label>
            <input type='text' name='status_reserva' placeholder='Digite a situação da reserva' onChange={valueInput} value={data.status_reserva}/> <br /><br />

            <button type='submit'>Guardar Alterações</button>
        </form>
      </main>
    </>
  )
}
